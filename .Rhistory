#theme_bw or _ whatever are just preset themes to help with making the graph look a certain way
theme_bw()+
theme(axis.text.x = element_text(angle = 25, vjust = 1.0, hjust = 1.0)) +
xlab ("Time")+
ylab ("Temperature (C)")
ggplot(temp3, aes(x=time, y=temperature2))+
#the following line x=time assigns x and y axis labels
geom_line()+
coord_cartesian(ylim =c(-2,1)) +
scale_x_datetime(date_breaks = "4 hour",  labels = date_format("%m/%d - %H:%M")) +
#theme_bw or _ whatever are just preset themes to help with making the graph look a certain way
theme_bw()+
theme(axis.text.x = element_text(angle = 25, vjust = 1.0, hjust = 1.0)) +
xlab ("Time")+
ylab ("Temperature(C)")
#One thing that I need to do is learn to make loops. This way I am not repeating the same code for two different plots.
boxplot(temp3$temperature2)
ggplot(temp3, aes(x=time, y=temperature1))+
#the following line x=time assigns x and y axis labels
geom_line()+
coord_cartesian(ylim =c(-3,1)) +
scale_x_datetime(date_breaks = "4 hour",  labels = date_format("%m/%d - %H:%M")) +
#theme_bw or _ whatever are just preset themes to help with making the graph look a certain way
theme_bw()+
theme(axis.text.x = element_text(angle = 25, vjust = 1.0, hjust = 1.0)) +
xlab ("Time")+
ylab ("Temperature (C)")
boxplot(temp3$temperature1)
require(ggplot2)
require(dplyr)
require(plyr)
require(lubridate)
require(dplyr)
require(reshape2)
require(scales)
#Import the raw csv file from the temperature loggers
#If you have two water temperatures, name them watertemp1 and watertemp2
temp1raw = read.csv("LJ_20180529_L1_1.csv", header = FALSE, sep =",")
temp2raw = read.csv("LJ_20180529_L2_1_w.csv", header = FALSE, sep =",")
##Removing all the useless raw output from the logger
temp1 = temp1raw [-(1:200), -c(1,4, 5, 6)]
names(temp1)= c("time", "temperature1")
class(temp1$temperature1)
class(temp1$time)
##The logger exports the temperature as a factor. So, we need to convert it to a number. is a little more than just a as.numeric because the code was showing the wrong value at first.
temp1$temperature1 = as.numeric(as.character(temp1$temperature1))
##This uses lubridate to convert the dates into a useable format.
temp1$time = ymd_hms(temp1$time)
class(temp1$temperature1)
class(temp1$time)
#doing the same thing for the second temperature logger
temp2 = temp2raw [-(1:200), -c(1,4, 5, 6)]
names(temp2)= c("time2", "temperature2")
temp2$temperature2 = as.numeric(as.character(temp2$temperature2))
temp2$time2 = ymd_hms(temp2$time2)
#This creates a new dataset called temp, with a common timeline and the two temperatures.
temp3 = cbind(temp1, temperature2=temp2$temperature2)
temp = melt(data = temp3, id.vars = "time", measure.vars = c("temperature1", "temperature2"))
names(temp)= c("time", "logger", "temperature")
boxplot(temp3$temperature1)
ggplot(temp3, aes(x=time, y=temperature1))+
#the following line x=time assigns x and y axis labels
geom_line()+
coord_cartesian(ylim =c(0,3)) +
scale_x_datetime(date_breaks = "4 hour",  labels = date_format("%m/%d - %H:%M")) +
#theme_bw or _ whatever are just preset themes to help with making the graph look a certain way
theme_bw()+
theme(axis.text.x = element_text(angle = 25, vjust = 1.0, hjust = 1.0)) +
xlab ("Time")+
ylab ("Temperature (C)")
#another way to play there "theme". Basically you control the way the gram looks
#theme (panel.grid = element_blank(),
# panel.background = element_rect(fill = "white"),
# panel.border = element_rect(colour = "black", fill = NA,size = 0.2))
boxplot(temp3$temperature1)
ggplot(temp3, aes(x=time, y=temperature1))+
#the following line x=time assigns x and y axis labels
geom_line()+
coord_cartesian(ylim =c(0,3)) +
scale_x_datetime(date_breaks = "1 hour",  labels = date_format("%m/%d - %H:%M")) +
#theme_bw or _ whatever are just preset themes to help with making the graph look a certain way
theme_bw()+
theme(axis.text.x = element_text(angle = 25, vjust = 1.0, hjust = 1.0)) +
xlab ("Time")+
ylab ("Temperature (C)")
#another way to play there "theme". Basically you control the way the gram looks
#theme (panel.grid = element_blank(),
# panel.background = element_rect(fill = "white"),
# panel.border = element_rect(colour = "black", fill = NA,size = 0.2))
#One thing that I need to do is learn to make loops. This way I am not repeating the same code for two different plots.
boxplot(temp3$temperature2)
ggplot(temp3, aes(x=time, y=temperature2))+
#the following line x=time assigns x and y axis labels
geom_line()+
coord_cartesian(ylim =c(0,3)) +
scale_x_datetime(date_breaks = "1 hour",  labels = date_format("%m/%d - %H:%M")) +
#theme_bw or _ whatever are just preset themes to help with making the graph look a certain way
theme_bw()+
theme(axis.text.x = element_text(angle = 25, vjust = 1.0, hjust = 1.0)) +
xlab ("Time")+
ylab ("Temperature(C)")
#Both on the same line
ggplot(data = temp, aes(x=logger, y=temperature))+
geom_boxplot(notch = TRUE)+
theme_bw()+
xlab ("")+
ylab ("Temperature (C)")
ggplot(temp, aes(x=time, y=temperature, colour = logger))+
#the following line x=time assigns x and y axis labels
geom_line()+
coord_cartesian(ylim =c(0,3)) +
scale_x_datetime(date_breaks = "1 hour",  labels = date_format("%m/%d - %H:%M")) +
#theme_bw or _ whatever are just preset themes to help with making the graph look a certain way
theme_bw()+
theme(axis.text.x = element_text(angle = 25, vjust = 1.0, hjust = 1.0)) +
xlab ("Time")+
ylab ("Temperature (C)")
ggplot(data = temp, aes(x=logger, y=temperature))+
geom_boxplot(notch = TRUE)+
theme_bw()+
xlab ("")+
ylab ("Temperature (C)")
ggplot(data = temp, aes(x=logger, y=temperature))+
geom_boxplot(notch = FALSE)+
theme_bw()+
xlab ("")+
ylab ("Temperature (C)")
ggplot(data = temp, aes(x=logger, y=temperature))+
geom_histogram()+
theme_bw()+
xlab ("")+
ylab ("Temperature (C)")
ggplot(data = temp, aes(x=logger))+
geom_histogram()+
theme_bw()+
xlab ("")+
ylab ("Temperature (C)")
ggplot(data = temp, aes(x=temperature))+
geom_histogram()+
theme_bw()+
xlab ("")+
ylab ("Temperature (C)")
View(temp)
ggplot(data = temp, aes(x=temperature, colour = logger))+
geom_histogram()+
theme_bw()+
xlab ("")+
ylab ("Temperature (C)")
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram()+
theme_bw()+
xlab ("")+
ylab ("Temperature (C)")
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(stat_bin(80))+
theme_bw()+
xlab ("")+
ylab ("Temperature (C)")
ggplot(data = temp3, aes(x=temperature2, stat_bin(80)))+
geom_histogram()+
theme_bw()+
xlab ("")+
ylab ("Temperature (C)")
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram()+
theme_bw()+
xlab ("")+
ylab ("Temperature (C)")
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(aes(stat_bin(80)))+
theme_bw()+
xlab ("")+
ylab ("Temperature (C)")
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=200)+
theme_bw()+
xlab ("")+
ylab ("Temperature (C)")
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=90)+
theme_bw()+
xlab ("")+
ylab ("Temperature (C)")
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=90)+
theme_bw()+
xlab ("Temperature (C)")+
ylab ("Frequency")
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=90)+
theme_bw()+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,2))
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=90)+
theme_bw()+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,2))+
scale_x_continuous(breaks ="0.2")
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=90)+
theme_bw()+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,2))+
scale_x_cbreaks(breaks =  ="0.1")
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=90)+
theme_bw()+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,2))+
scale_x_breaks(breaks ="0.1")
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=90)+
theme_bw()+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,2))+
scale_x_discrete(breaks ="0.1")
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=90)+
theme_bw()+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,2))+
scale_x_discrete(breaks ="01")
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=90)+
theme_bw()+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,2))+
scale_x_discrete(breaks ="90")
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=90)+
theme_bw()+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,2))
ggplot(data = temp3, aes(x=temperature1))+
geom_histogram(bins=90)+
theme_bw()+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,2))
ggplot(data = temp3, aes(x=temperature1))+
geom_histogram(bins=30)+
theme_bw()+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,2))
ggplot(data = temp3, aes(x=temperature1))+
geom_histogram(bins=30)+
theme_bw()+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,3))
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=30)+
theme_bw()+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,3))
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=30)+
theme_bw()+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,3))
ggplot(data = temp3, aes(x=temperature1))+
geom_histogram(bins=30)+
theme_bw()+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,3))
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=30)+
theme_bw()+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,3))
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=20)+
theme_bw()+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,3))
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=20)+
theme_bw()+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,3)) +
ggtitle("Water Temperature")
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=20)+
theme_bw()+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,3)) +
ggtitle("Water Temperature")+
theme_update(plot.title=element_text(hjust=0.5))
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=20)+
theme_bw()+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,3)) +
ggtitle("Water Temperature")+
theme_update(plot.title=element_text(hjust=0.5))
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=20)+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,3)) +
ggtitle("Water Temperature")+
theme_update(plot.title=element_text(hjust=0.5))+
theme_bw()
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=20)+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,3)) +
ggtitle("Water Temperature")+
theme_bw(plot.title=element_text(hjust=0.5))
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=20)+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,3)) +
ggtitle("Water Temperature")+
theme_bw(plot.title=element_text(hjust=0.5))
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=20)+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,3)) +
ggtitle("Water Temperature")+
theme_update(plot.title=element_text(hjust=0.5))
ggplot(data = temp3, aes(x=temperature2))+
theme_update(plot.title=element_text(hjust=0.5))+
geom_histogram(bins=20)+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,3)) +
ggtitle("Water Temperature")+
theme_bw()
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=20)+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,3)) +
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Water Temperature")+
theme_bw()
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=20)+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,3))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))+
ggtitle("Water Temperature")+
ggplot(temp3, aes(x=time, y=temperature2))+
#the following line x=time assigns x and y axis labels
geom_line()+
coord_cartesian(ylim =c(0,3)) +
scale_x_datetime(date_breaks = "1 hour",  labels = date_format("%m/%d - %H:%M")) +
#theme_bw or _ whatever are just preset themes to help with making the graph look a certain way
theme_bw()+
theme(axis.text.x = element_text(angle = 25, vjust = 1.0, hjust = 1.0)) +
xlab ("Time")+
ylab ("Temperature(C)")
ggplot(data = temp3, aes(x=temperature2))+
geom_histogram(bins=20)+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,3))+
ggtitle("Water Temperature")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggtitle("Water Temperature")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggtitle("Water Temperature")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(temp3, aes(x=time, y=temperature2))+
#the following line x=time assigns x and y axis labels
geom_line()+
coord_cartesian(ylim =c(0,3)) +
scale_x_datetime(date_breaks = "1 hour",  labels = date_format("%m/%d - %H:%M")) +
#theme_bw or _ whatever are just preset themes to help with making the graph look a certain way
theme(axis.text.x = element_text(angle = 25, vjust = 1.0, hjust = 1.0)) +
xlab ("Time")+
ylab ("Temperature(C)")
ggtitle("Water Temperature")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggtitle("Water Temperature")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggtitle("Water Temperature")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggtitle("Water Temperature")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(temp3, aes(x=time, y=temperature2))+
geom_line()+
coord_cartesian(ylim =c(0,3)) +
scale_x_datetime(date_breaks = "1 hour",  labels = date_format("%m/%d - %H:%M")) +
theme(axis.text.x = element_text(angle = 25, vjust = 1.0, hjust = 1.0)) +
xlab ("Time")+
ylab ("Temperature(C)")+
ggtitle("Water Temperature")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(temp3, aes(x=time, y=temperature1))+
#the following line x=time assigns x and y axis labels
geom_line()+
coord_cartesian(ylim =c(0,3)) +
scale_x_datetime(date_breaks = "1 hour",  labels = date_format("%m/%d - %H:%M")) +
#theme_bw or _ whatever are just preset themes to help with making the graph look a certain way
theme_bw()+
theme(axis.text.x = element_text(angle = 25, vjust = 1.0, hjust = 1.0)) +
xlab ("Time")+
ylab ("Temperature (C)")+
ggtitle("Air Temperature")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = temp3, aes(x=temperature1))+
geom_histogram(bins=30)+
theme_bw()+
xlab ("Temperature (C)")+
ylab ("Frequency")+
coord_cartesian(xlim=c(0,3))+
ggtitle("Air Temperature")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(temp3, aes(x=time, y=temperature1))+
#the following line x=time assigns x and y axis labels
geom_line()+
coord_cartesian(ylim =c(0,3)) +
scale_x_datetime(date_breaks = "1 hour",  labels = date_format("%m/%d - %H:%M")) +
#theme_bw or _ whatever are just preset themes to help with making the graph look a certain way
theme_bw()+
theme(axis.text.x = element_text(angle = 25, vjust = 1.0, hjust = 1.0)) +
xlab ("Time")+
ylab ("Temperature (C)")+
ggtitle("Air Temperature")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(temp3, aes(x=time, y=temperature1))+
#the following line x=time assigns x and y axis labels
geom_line()+
coord_cartesian(ylim =c(0,3)) +
scale_x_datetime(date_breaks = "1 hour",  labels = date_format("%m/%d - %H:%M")) +
#theme_bw or _ whatever are just preset themes to help with making the graph look a certain way
theme_bw()+
theme(axis.text.x = element_text(angle = 50, vjust = 1.0, hjust = 1.0)) +
xlab ("Time")+
ylab ("Temperature (C)")+
ggtitle("Air Temperature")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(temp3, aes(x=time, y=temperature1))+
#the following line x=time assigns x and y axis labels
geom_line()+
coord_cartesian(ylim =c(0,3)) +
scale_x_datetime(date_breaks = "1 hour",  labels = date_format("%m/%d - %H:%M")) +
#theme_bw or _ whatever are just preset themes to help with making the graph look a certain way
theme(axis.text.x = element_text(angle = 25, vjust = 1.0, hjust = 1.0)) +
xlab ("Time")+
ylab ("Temperature (C)")+
ggtitle("Air Temperature")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
ggplot(temp3, aes(x=time, y=temperature1))+
#the following line x=time assigns x and y axis labels
geom_line()+
coord_cartesian(ylim =c(0,3)) +
scale_x_datetime(date_breaks = "1 hour",  labels = date_format("%m/%d - %H:%M")) +
#theme_bw or _ whatever are just preset themes to help with making the graph look a certain way
xlab ("Time")+
ylab ("Temperature (C)")+
ggtitle("Air Temperature")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(angle = 25, vjust = 1.0, hjust = 1.0))
ggplot(temp3, aes(x=time, y=temperature2))+
geom_line()+
coord_cartesian(ylim =c(0,3)) +
scale_x_datetime(date_breaks = "1 hour",  labels = date_format("%m/%d - %H:%M")) +
xlab ("Time")+
ylab ("Temperature(C)")+
ggtitle("Water Temperature")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(angle = 25, vjust = 1.0, hjust = 1.0))
ggplot(temp, aes(x=time, y=temperature, colour = logger))+
geom_line()+
coord_cartesian(ylim =c(0,3)) +
scale_x_datetime(date_breaks = "1 hour",  labels = date_format("%m/%d - %H:%M")) +
theme_bw()+
theme(axis.text.x = element_text(angle = 25, vjust = 1.0, hjust = 1.0)) +
xlab ("Time")+
ylab ("Temperature (C)") +
theme(legend.position = "top")
